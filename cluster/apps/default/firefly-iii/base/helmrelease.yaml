---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: firefly-iii
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      main:
        containers:
          main:
            image:
              repository: fireflyiii/core
              tag: version-6.1.9
            resources:
              requests:
                cpu: 15m
                memory: 164Mi
              limits:
                memory: 175Mi
            envFrom:
              - secretRef:
                  name: firefly-iii-secret
            env:
              DB_CONNECTION: pgsql
              DB_HOST:
                valueFrom:
                  secretKeyRef:
                    name: pgo-cluster-pguser-fireflyiii
                    key: host
              DB_PORT:
                valueFrom:
                  secretKeyRef:
                    name: pgo-cluster-pguser-fireflyiii
                    key: port
              DB_DATABASE:
                valueFrom:
                  secretKeyRef:
                    name: pgo-cluster-pguser-fireflyiii
                    key: dbname
              DB_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: pgo-cluster-pguser-fireflyiii
                    key: user
              DB_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: pgo-cluster-pguser-fireflyiii
                    key: password
          cronjob:
            image:
              repository: alpine
              tag: 3.19.1
            imagePullPolicy: IfNotPresent
            command:
              - sh
            args:
              - -c
              - >-
                echo "0 */3 * * * wget -qO- http://firefly-iii:8080/api/v1/cron/$(STATIC_CRON_TOKEN)"
                | crontab -
                && crond -f -L /dev/stdout
            env:
              - name: STATIC_CRON_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: firefly-iii-secret
                    key: STATIC_CRON_TOKEN
        initContainers:
          wait-database:
            image:
              repository: alpine
              tag: 3.19.1
            imagePullPolicy: IfNotPresent
            command:
              - sh
            args:
              - -c
              - >-
                until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
                do echo "Waiting for database";
                done
            env:
              - name: POSTGRES_HOST
                valueFrom:
                  secretKeyRef:
                    name: pgo-cluster-pguser-fireflyiii
                    key: host
    service:
      main:
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        primary: true
        className: nginx
        hosts:
          - host: &host money.${SECRET_DOMAIN_1}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN_1//./-}-prod-tls
    persistence:
      data:
        enabled: true
        existingClaim: firefly-iii-data
        advancedMounts:
          main:
            main:
              - path: /var/www/html/firefly-iii/storage/upload
