apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name wordpress
  labels: &labels
    app.kubernetes.io/name: *name
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      initContainers:
        - name: wait-database
          image: alpine:3.16.0
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $MYSQL_HOST:3306;
              do echo "Waiting for database";
              done
          env:
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: wordpress-secrets
                  key: wordpress_db_host
      containers:
        - name: *name
          image: wordpress:6.0.0-fpm-alpine
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 50m
              memory: 100Mi
          ports:
            - name: &port http
              protocol: TCP
              containerPort: 80
          volumeMounts:
            - name: wordpress-config
              mountPath: /var/www/html
          env:
            - name: WORDPRESS_DB_HOST
              valueFrom:
                secretKeyRef:
                  name: wordpress-secrets
                  key: wordpress_db_host
            - name: WORDPRESS_DB_USER
              valueFrom:
                secretKeyRef:
                  name: wordpress-secrets
                  key: wordpress_db_user
            - name: WORDPRESS_DB_NAME
              valueFrom:
                secretKeyRef:
                  name: wordpress-secrets
                  key: wordpress_db_name
            - name: WORDPRESS_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: wordpress-secrets
                  key: wordpress_db_password
        - name: wordpress-proxy
          image: nginx:1.23-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: *port
              protocol: TCP
              containerPort: 80
          volumeMounts:
            - name: wordpress-nginxconfig
              mountPath: /etc/nginx/templates/default.conf.template
              subPath: default.conf.template
            - name: wordpress-config
              mountPath: /var/www/html
              readOnly: true
          livenessProbe:
            httpGet:
              path: /wp-admin/install.php
              port: *port
              scheme: HTTP
            initialDelaySeconds: 120
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            httpGet:
              path: /wp-admin/install.php
              port: *port
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 6
      volumes:
        - name: wordpress-config
          persistentVolumeClaim:
            claimName: wordpress-config
        - name: wordpress-nginxconfig
          configMap:
            name: wordpress-nginxconfig
