---
# yaml-language-server: $schema=https://raw.githubusercontent.com/JJGadgets/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app nextcloud
spec:
  interval: 15m
  chart:
    spec:
      chart: nextcloud
      version: 3.5.9
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    fullnameOverride: *app
    image:
      repository: nextcloud
      tag: 26.0.1-fpm-alpine
      flavor: fpm-alpine
    ingress:
      enabled: true
      className: traefik
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: websecure
        traefik.ingress.kubernetes.io/router.middlewares: >-
          networking-system-secure-headers@kubernetescrd,
          networking-system-nextcloud-redirect-1@kubernetescrd,
          networking-system-nextcloud-redirect-2@kubernetescrd
      tls:
        - hosts:
            - &host nextcloud.${SECRET_DOMAIN_2}
          secretName: ${SECRET_DOMAIN_2//./-}-prod-tls
    nextcloud:
      host: *host
      existingSecret:
        enabled: true
        secretName: nextcloud-secret
      datadir: /var/www/data
      extraEnv:
        - name: REDIS_HOST
          value: redis
        - name: REDIS_HOST_PORT
          value: "6379"
        - name: REDIS_HOST_PASSWORD
          valueFrom:
            secretKeyRef:
              name: nextcloud-secret
              key: redis-password
      extraInitContainers:
        - name: wait-database
          image: alpine:3.17.3
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
              do echo "Waiting for database";
              done
          env:
            - name: POSTGRES_HOST
              value: pgo-cluster-primary.default.svc
        - name: wait-redis
          image: alpine:3.17.3
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;
              do echo "Waiting for Redis";
              done
          env:
            - name: REDIS_HOST
              value: redis
            - name: REDIS_HOST_PORT
              value: "6379"
    nginx:
      enabled: true
      image:
        repository: nginx
        tag: 1.24-alpine
    internalDatabase:
      enabled: false
    externalDatabase:
      enabled: true
      type: postgresql
      host: pgo-cluster-primary.default.svc:5432
      database: nextcloud
      existingSecret:
        enabled: true
        secretName: pgo-cluster-pguser-nextcloud
        usernameKey: user
        passwordKey: password
    persistence:
      enabled: true
      existingClaim: nextcloud-config
      nextcloudData:
        enabled: true
        existingClaim: nextcloud-data
    startupProbe:
      enabled: true
    resources:
      requests:
        cpu: 34m
        memory: 204Mi
      limits:
        memory: 363Mi
