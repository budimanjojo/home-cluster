apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name nextcloud
  labels: &labels
    app.kubernetes.io/name: *name
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      securityContext:
        fsGroup: 82
        fsGroupChangePolicy: OnRootMismatch
      initContainers:
        - name: wait-database
          image: alpine:3.16.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $MYSQL_HOST:3306 || nc -w 1 -v $POSTGRES_HOST:5432;
              do echo "Waiting for database";
              done
          env:
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: pgo-cluster-pguser-nextcloud
                  key: host
          envFrom:
            - secretRef:
                name: nextcloud-secrets
        - name: wait-redis
          image: alpine:3.16.2
          imagePullPolicy: IfNotPresent
          command:
            - sh
          args:
            - -c
            - >-
              until nc -w 1 -v $REDIS_HOST:$REDIS_HOST_PORT;
              do echo "Waiting for Redis";
              done
          envFrom:
            - secretRef:
                name: nextcloud-secrets
      containers:
        - name: *name
          image: nextcloud:24.0.3-fpm-alpine
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
          volumeMounts:
            - name: nextcloud-config
              mountPath: /var/www/html
            - name: nextcloud-data
              mountPath: /var/www/data
          envFrom:
            - secretRef:
                name: nextcloud-secrets
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: pgo-cluster-pguser-nextcloud
                  key: dbname
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: pgo-cluster-pguser-nextcloud
                  key: user
            - name: POSTGRES_HOST
              valueFrom:
                secretKeyRef:
                  name: pgo-cluster-pguser-nextcloud
                  key: host
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pgo-cluster-pguser-nextcloud
                  key: password
        - name: nextcloud-cron
          image: nextcloud:24.0.3-fpm-alpine
          imagePullPolicy: IfNotPresent
          command:
            - /cron.sh
          volumeMounts:
            - name: nextcloud-config
              mountPath: /var/www/html
            - name: nextcloud-data
              mountPath: /var/www/data
        - name: nextcloud-proxy
          image: nginx:1.23-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - name: &port http
              protocol: TCP
              containerPort: 80
          volumeMounts:
            - name: nextcloud-nginxconfig
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nextcloud-config
              mountPath: /var/www/html
              readOnly: true
            - name: nextcloud-data
              mountPath: /var/www/data
              readOnly: true
          startupProbe:
            httpGet:
              path: /status.php
              port: *port
              httpHeaders:
                - name: Host
                  value: nextcloud.${SECRET_DOMAIN_2}
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 30
          livenessProbe:
            httpGet:
              path: /status.php
              port: *port
              httpHeaders:
                - name: Host
                  value: nextcloud.${SECRET_DOMAIN_2}
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /status.php
              port: *port
              httpHeaders:
                - name: Host
                  value: nextcloud.${SECRET_DOMAIN_2}
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: nextcloud-config
          persistentVolumeClaim:
            claimName: nextcloud-config
        - name: nextcloud-data
          persistentVolumeClaim:
            claimName: nextcloud-data
        - name: nextcloud-nginxconfig
          configMap:
            name: nextcloud-nginxconfig
