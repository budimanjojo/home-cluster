apiVersion: apps/v1
kind: Deployment
metadata:
  name: &name radicale
  labels: &labels
    app.kubernetes.io/name: *name
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels: *labels
  template:
    metadata:
      labels: *labels
    spec:
      containers:
        - name: *name
          image: tomsquest/docker-radicale:3.1.8.0
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 100m
              memory: 150Mi
          ports:
            - name: &port http
              protocol: TCP
              containerPort: 5232
          volumeMounts:
            - name: radicale-data
              mountPath: /data
            - name: radicale-configs
              mountPath: /config/config
              subPath: config.cfg
              readOnly: true
            - name: radicale-secrets
              mountPath: /config/secret
          startupProbe:
            tcpSocket:
              port: *port
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 30
          livenessProbe:
            tcpSocket:
              port: *port
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: *port
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: RADICALE_CONFIG
              value: /config/config
      volumes:
        - name: radicale-data
          persistentVolumeClaim:
            claimName: radicale-data
        - name: radicale-configs
          configMap:
            name: radicale-configs
        - name: radicale-secrets
          secret:
            secretName: radicale-secrets
