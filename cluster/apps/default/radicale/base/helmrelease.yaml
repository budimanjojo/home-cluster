---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: radicale
spec:
  interval: 15m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    controllers:
      radicale:
        pod:
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
        containers:
          main:
            image:
              repository: tomsquest/docker-radicale
              tag: 3.5.4.0
            resources:
              requests:
                cpu: 15m
                memory: 105Mi
              limits:
                memory: 105Mi
            probes:
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
              liveness:
                enabled: true
              readiness:
                enabled: true
            env:
              RADICALE_CONFIG: /config/config
    service:
      main:
        controller: radicale
        ports:
          http:
            port: 5232
    route:
      main:
        hostnames: ["dav.${SECRET_DOMAIN_0}"]
        parentRefs:
          - name: external
            namespace: networking-system
            port: 443
        rules:
          - backendRefs:
              - name: radicale
                port: 5232
    configMaps:
      config:
        suffix: config
        enabled: true
        data:
          config.cfg: |
            [server]
            hosts = 0.0.0.0:5232

            [auth]
            type = htpasswd
            htpasswd_filename = /config/secret/users
            htpasswd_encryption = bcrypt

            [storage]
            filesystem_folder = /data/collections
    persistence:
      data:
        enabled: true
        existingClaim: radicale-data
        globalMounts:
          - path: /data
      config:
        enabled: true
        type: configMap
        name: radicale-config
        globalMounts:
          - path: /config/config
            subPath: config.cfg
            readOnly: true
      secret:
        enabled: true
        type: secret
        name: radicale-secret
        globalMounts:
          - path: /config/secret
