---
# yaml-language-server: $schema=https://schemas.budimanjojo.com/source.toolkit.fluxcd.io/ocirepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: OCIRepository
metadata:
  name: kube-prometheus-stack
spec:
  interval: 30m
  timeout: 60s
  url: oci://ghcr.io/prometheus-community/charts/kube-prometheus-stack
  ref:
    tag: 73.2.0
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
---
# yaml-language-server: $schema=https://schemas.budimanjojo.com/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 1h
  timeout: 5m
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 5
  values:
    crds:
      enabled: false
    prometheus:
      route:
        main:
          enabled: true
          hostnames: ["prom.${SECRET_DOMAIN_0}"]
          parentRefs:
            - name: internal
              namespace: networking-system
              sectionName: https-0
      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        additionalScrapeConfigs:
          - job_name: external-node-exporter
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets:
                  - ${CONFIG_VYOS_IP_ADDRESS}:9100
                  - ${CONFIG_NFS_SERVER_IP_ADDRESS}:9100
          - job_name: external-smartctl-exporter
            scrape_interval: 1m
            scrape_timeout: 10s
            honor_timestamps: true
            static_configs:
              - targets:
                  - ${CONFIG_NFS_SERVER_IP_ADDRESS}:9633
                  - 192.168.50.49:9633
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        inhibit_rules:
          - equal:
              - namespace
              - alertname
            source_match:
              severity: critical
            target_match_re:
              severity: warning|info
          - equal:
              - namespace
              - alertname
            source_match:
              severity: warning
            target_match_re:
              severity: info
        receivers:
          - name: "null"
          - name: discord
            discord_configs:
              - webhook_url: ${SECRET_DISCORD_PROMETHEUS_WH_URL}
                title: |-
                  [{{ .Status | toUpper }}:{{ if eq .Status "firing" }}{{ .Alerts.Firing | len }}{{ else }}{{ .Alerts.Resolved | len }}{{ end }}]
                message: |-
                  {{- range .Alerts }}
                    **{{ .Labels.alertname }} {{ if ne .Labels.severity "" }}({{ .Labels.severity | title }}){{ end }} **
                    {{- if ne .Annotations.description "" }}
                      **Description:** {{ .Annotations.description }}
                    {{- else if ne .Annotations.summary "" }}
                      **Summary:** {{ .Annotations.summary }}
                    {{- else if ne .Annotations.message "" }}
                      **Message:** {{ .Annotations.message }}
                    {{- else }}
                      **Description:** N/A
                    {{- end }}
                  {{- end }}
        route:
          group_by:
            - alertname
          group_interval: 5m
          group_wait: 30s
          receiver: discord
          repeat_interval: 12h
          routes:
            - match:
                alertname: Watchdog
              receiver: "null"
            - match:
                severity: critical
              receiver: discord
            - match:
                alertname: CephNodeNetworkPacketDrops
              receiver: "null"
            - match:
                alertname: InfoInhibitor
              receiver: "null"
    alertmanagerSpec:
      replicas: 1
    grafana:
      enabled: false
      forceDeployDashboards: true
      sidecar:
        dashboards:
          annotations:
            grafana_folder: Kubernetes
    serviceMonitor:
      scrapeTimeout: 60s
    kubeControllerManager:
      enabled: true
      endpoints:
        - 192.168.200.21
        - 192.168.200.22
        - 192.168.200.23
    kubeScheduler:
      enabled: true
      endpoints:
        - 192.168.200.21
        - 192.168.200.22
        - 192.168.200.23
    kubeProxy:
      enabled: false
    additionalPrometheusRulesMap:
      dockerhub-rules:
        groups:
          - name: dockerhub
            rules:
              - alert: DockerhubRateLimitRisk
                annotations:
                  summary: Kubernetes cluster Dockerhub rate limit risk
                expr: count(time() - container_last_seen{image=~"(docker.io).*",container!=""} < 30) > 100
                labels:
                  severity: critical
