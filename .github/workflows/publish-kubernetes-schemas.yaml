---
name: Publish Kubernetes schemas

on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 * * *
  push:
    branches:
      - main
    paths:
      - ./github/workflows/publish-kubernetes-schemas.yaml

env:
  IMAGE_REGISTRY: ghcr.io

jobs:
  publish-kubernetes-schemas:
    name: Publish Kubernetes schemas
    runs-on: ["arc-runner-set-home-cluster"]
    steps:
      - name: Setup Kube tools
        uses: yokawasa/action-setup-kube-tools@af4ebb1af1efd30c5bd84a2e9773355ad6362a33
        with:
          setup-tools: |
            kubectl
      - name: Setup Flux
        uses: fluxcd/flux2/action@a03ea8ace39ebfaa17cef29965ef535d75434b83
      - name: Setup Python
        uses: actions/setup-python@f97b83114c6f41cfaa57698147ad3ce20543a127
        with:
          python-version: "3.11"
      - name: Setup QEMU
        run: |
          sudo apt update
          sudo apt-get install -y qemu qemu-user-static
      - name: Set up Docker context for Buildx
        id: buildx-context
        run: |
          docker context create builder
      - name: Setup Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@7703e82fbced3d0c9eec08dff4429c023a5fd9a9
        with:
          endpoint: builder
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup crd-extractor
        uses: robinraju/release-downloader@0ef9efab81fa2487942697c8f438cdd179f82529
        with:
          repository: datreeio/CRDs-catalog
          latest: true
          fileName: crd-extractor.zip
      - name: Extract crd-extractor
        run: |
          unzip -j $GITHUB_WORKSPACE/crd-extractor.zip -d $GITHUB_WORKSPACE
      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@ca9e30baf83f7f26708fb0059af9a0973fe5f27e
        with:
          encodedString: ${{ secrets.KUBECONFIG }}
          fileName: kubeconfig
      - name: Run crd-extractor
        env:
          KUBECONFIG: ${{ steps.kubeconfig.outputs.filePath }}
        run: |
          bash $GITHUB_WORKSPACE/crd-extractor.sh
      - name: Publish schema as OCI
        run: |
          flux push artifact oci://ghcr.io/budimanjojo/kubernetes-schemas-oci:latest \
            --path="/home/runner/.datree/crdSchemas" \
            --source="${{ github.repositoryUrl }}" \
            --revision="main"
      - name: Write nginx-unprivileged Dockerfile
        run: |
          cat <<EOF > /home/runner/.datree/crdSchemas/Dockerfile
          FROM docker.io/nginxinc/nginx-unprivileged:latest
          COPY --chown=nginx:nginx --chmod=755 . /usr/share/nginx/html
          USER nginx
          EOF
      - name: Publish schemas as web container
        uses: docker/build-push-action@4b0752a2b1b87033d946e4e0106643f20d69d613
        with:
          context: /home/runner/.datree/crdSchemas
          platforms: linux/amd64,linux/arm64
          file: /home/runner/.datree/crdSchemas/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ github.repository_owner }}/kubernetes-schemas-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels:
            org.opencontainers.image.source="https://github.com/budimanjojo/home-cluster"
            org.opencontainers.image.authors="Budiman JOJO <budimanjojo@gmail.com>"
